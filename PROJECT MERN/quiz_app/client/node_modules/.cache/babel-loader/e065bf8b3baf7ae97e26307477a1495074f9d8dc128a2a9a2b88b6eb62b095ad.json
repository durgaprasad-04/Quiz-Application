{"ast":null,"code":"import { postServerData } from '../helper/helper';\nimport * as Action from '../redux/result_reducer';\nexport const PushAnswer = result => async dispatch => {\n  try {\n    await dispatch(Action.pushResultAction(result));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateResult = index => async dispatch => {\n  try {\n    dispatch(Action.updateResultAction(index));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/** insert user data */\nexport const usePublishResult = resultData => {\n  const {\n    result,\n    username\n  } = resultData;\n  (async () => {\n    try {\n      if (result !== 0 && !username) throw new Error(\"Couldn't get Result\");\n      await postServerData(``, resultData, data => data);\n    } catch (error) {\n      console.log(error);\n    }\n  })();\n};","map":{"version":3,"names":["postServerData","Action","PushAnswer","result","dispatch","pushResultAction","error","console","log","updateResult","index","updateResultAction","usePublishResult","resultData","username","Error","data"],"sources":["D:/DURGAPRASAD FILES/PROJECT MERN/quiz_app/client/src/hooks/setResult.js"],"sourcesContent":["\r\nimport { postServerData } from '../helper/helper'\r\nimport * as Action from '../redux/result_reducer'\r\n\r\nexport const PushAnswer = (result) => async (dispatch) => {\r\n    try {\r\n        await dispatch(Action.pushResultAction(result))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const updateResult = (index) => async (dispatch) => {\r\n    try {\r\n        dispatch(Action.updateResultAction(index));\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n/** insert user data */\r\nexport const usePublishResult = (resultData) => {\r\n    const { result, username } = resultData;\r\n    (async () => {\r\n        try {\r\n            if(result !== 0 && !username) throw new Error(\"Couldn't get Result\");\r\n            await postServerData(``,resultData, data => data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    })();\r\n}"],"mappings":"AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AAEjD,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACA,MAAMA,QAAQ,CAACH,MAAM,CAACI,gBAAgB,CAACF,MAAM,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMG,YAAY,GAAIC,KAAK,IAAK,MAAON,QAAQ,IAAK;EACvD,IAAI;IACAA,QAAQ,CAACH,MAAM,CAACU,kBAAkB,CAACD,KAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,gBAAgB,GAAIC,UAAU,IAAK;EAC5C,MAAM;IAAEV,MAAM;IAAEW;EAAS,CAAC,GAAGD,UAAU;EACvC,CAAC,YAAY;IACT,IAAI;MACA,IAAGV,MAAM,KAAK,CAAC,IAAI,CAACW,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACpE,MAAMf,cAAc,CAAE,EAAC,EAACa,UAAU,EAAEG,IAAI,IAAIA,IAAI,CAAC;IACrD,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC,EAAE,CAAC;AACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}