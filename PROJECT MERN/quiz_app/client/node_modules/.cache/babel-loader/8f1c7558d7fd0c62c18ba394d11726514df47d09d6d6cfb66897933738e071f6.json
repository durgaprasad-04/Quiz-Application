{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const questionReducer = createSlice({\n  name: 'questions',\n  initialState: {\n    queue: [],\n    answers: [],\n    trace: 0\n  },\n  reducers: {\n    startExamAction: (state, action) => {\n      let {\n        questions,\n        answers\n      } = action.payload;\n      return {\n        ...state,\n        queue: questions,\n        answers\n      };\n    },\n    moveNextAction: state => {\n      return {\n        ...state,\n        trace: state.trace + 1\n      };\n    },\n    movePrevAction: state => {\n      return {\n        ...state,\n        trace: state.trace - 1\n      };\n    },\n    resetAllAction: () => {\n      return {\n        queue: [],\n        answers: [],\n        trace: 0\n      };\n    }\n  }\n});\nexport const {\n  startExamAction,\n  moveNextAction,\n  movePrevAction,\n  resetAllAction\n} = questionReducer.actions;\nexport default questionReducer.reducer;","map":{"version":3,"names":["createSlice","questionReducer","name","initialState","queue","answers","trace","reducers","startExamAction","state","action","questions","payload","moveNextAction","movePrevAction","resetAllAction","actions","reducer"],"sources":["D:/DURGAPRASAD FILES/PROJECT MERN/quiz_app/client/src/redux/question_reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const questionReducer = createSlice({\r\n    name: 'questions',\r\n    initialState : {\r\n        queue: [],\r\n        answers : [],\r\n        trace : 0\r\n    },\r\n    reducers : {\r\n        startExamAction : (state, action) => {\r\n            let{questions,answers} = action.payload\r\n            return {\r\n                ...state,\r\n                queue : questions,\r\n                answers \r\n                \r\n            }\r\n        },\r\n        moveNextAction : (state) => {\r\n            return {\r\n                ...state,\r\n                trace : state.trace + 1\r\n            }\r\n        },\r\n    \r\n    movePrevAction : (state) => {\r\n        return {\r\n            ...state,\r\n            trace : state.trace - 1\r\n        }\r\n    },\r\n    resetAllAction:() => {\r\n        return {\r\n            queue: [],\r\n            answers : [],\r\n            trace : 0\r\n        }\r\n    }\r\n    }\r\n})\r\nexport const{ startExamAction,moveNextAction,movePrevAction,resetAllAction}= questionReducer.actions;\r\nexport default questionReducer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,eAAe,GAAGD,WAAW,CAAC;EACvCE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAG;IACXC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAG,EAAE;IACZC,KAAK,EAAG;EACZ,CAAC;EACDC,QAAQ,EAAG;IACPC,eAAe,EAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,IAAG;QAACC,SAAS;QAACN;MAAO,CAAC,GAAGK,MAAM,CAACE,OAAO;MACvC,OAAO;QACH,GAAGH,KAAK;QACRL,KAAK,EAAGO,SAAS;QACjBN;MAEJ,CAAC;IACL,CAAC;IACDQ,cAAc,EAAIJ,KAAK,IAAK;MACxB,OAAO;QACH,GAAGA,KAAK;QACRH,KAAK,EAAGG,KAAK,CAACH,KAAK,GAAG;MAC1B,CAAC;IACL,CAAC;IAELQ,cAAc,EAAIL,KAAK,IAAK;MACxB,OAAO;QACH,GAAGA,KAAK;QACRH,KAAK,EAAGG,KAAK,CAACH,KAAK,GAAG;MAC1B,CAAC;IACL,CAAC;IACDS,cAAc,EAACA,CAAA,KAAM;MACjB,OAAO;QACHX,KAAK,EAAE,EAAE;QACTC,OAAO,EAAG,EAAE;QACZC,KAAK,EAAG;MACZ,CAAC;IACL;EACA;AACJ,CAAC,CAAC;AACF,OAAO,MAAK;EAAEE,eAAe;EAACK,cAAc;EAACC,cAAc;EAACC;AAAc,CAAC,GAAEd,eAAe,CAACe,OAAO;AACpG,eAAef,eAAe,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}