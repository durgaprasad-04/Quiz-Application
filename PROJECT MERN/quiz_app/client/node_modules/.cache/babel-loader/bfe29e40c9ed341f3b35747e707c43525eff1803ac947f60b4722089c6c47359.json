{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport data, { answers } from \"../database/data\";\n\n/** redux actions */\nimport * as Action from '../redux/question_reducer';\nexport const useFetchQestion = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [getData, setGetData] = useState({\n    isLoading: false,\n    apiData: [],\n    serverError: null\n  });\n  useEffect(() => {\n    setGetData(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    (async () => {\n      try {\n        let question = await data;\n        if (question.length > 0) {\n          setGetData(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n          setGetData(prev => ({\n            ...prev,\n            apiData: question\n          }));\n          dispatch(Action.startExamAction(question));\n        } else {\n          throw new Error(\"No Question Available\");\n        }\n      } catch (error) {\n        setGetData(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n        setGetData(prev => ({\n          ...prev,\n          serverError: error\n        }));\n      }\n    })();\n  }, [dispatch]);\n  return [getData, setGetData];\n};\n_s(useFetchQestion, \"rWkKqk8LvfGgOiObU76PA8rIing=\", false, function () {\n  return [useDispatch];\n});\nexport const MoveNextQuestion = () => async dispatch => {\n  try {\n    dispatch(Action.moveNextAction()); /** increase trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const MovePrevQuestion = () => async dispatch => {\n  try {\n    dispatch(Action.movePrevAction()); /** increase trace by 1 */\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["useEffect","useState","useDispatch","data","answers","Action","useFetchQestion","_s","dispatch","getData","setGetData","isLoading","apiData","serverError","prev","question","length","startExamAction","Error","error","MoveNextQuestion","moveNextAction","console","log","MovePrevQuestion","movePrevAction"],"sources":["D:/DURGAPRASAD FILES/PROJECT MERN/quiz_app/client/src/hooks/FetchQuestion.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport data ,{ answers }from \"../database/data\";\r\n\r\n/** redux actions */\r\nimport * as Action from '../redux/question_reducer'\r\n\r\n\r\nexport const useFetchQestion = () => {\r\n    const dispatch = useDispatch(); \r\nconst [getData, setGetData] =useState({ isLoading : false ,apiData:[],serverError :null})\r\n\r\n    useEffect(() => {\r\n        setGetData(prev => ({...prev, isLoading : true}));\r\n\r\n\r\n        (async () => {\r\n            try {\r\nlet question = await data;\r\n\r\nif(question.length > 0) { \r\n    setGetData(prev => ({\r\n        ...prev, isLoading:false}));\r\n        setGetData(prev => ({\r\n            ...prev, apiData:question}));\r\n\r\n            dispatch(Action.startExamAction(question))\r\n    } else{\r\n        throw new Error(\"No Question Available\");\r\n    }\r\n            }catch (error){\r\n                setGetData(prev => ({\r\n                    ...prev, isLoading:false}));\r\n                    setGetData(prev => ({\r\n                        ...prev, serverError:error}));\r\n                }\r\n\r\n                })();\r\n            },[dispatch]);\r\n            return [getData, setGetData];\r\n        }\r\n\r\n\r\n        export const MoveNextQuestion = () => async (dispatch) => {\r\n            try {\r\n                dispatch(Action.moveNextAction()); /** increase trace by 1 */\r\n            } catch (error) {\r\n                console.log(error)\r\n            \r\n            }\r\n        }\r\n        export const MovePrevQuestion = () => async (dispatch) => {\r\n            try {\r\n                dispatch(Action.movePrevAction()); /** increase trace by 1 */\r\n            } catch (error) {\r\n                console.log(error)\r\n            \r\n            }\r\n        }"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,IAAIC,OAAO,QAAO,kBAAkB;;AAE/C;AACA,OAAO,KAAKC,MAAM,MAAM,2BAA2B;AAGnD,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAClC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAET,QAAQ,CAAC;IAAEU,SAAS,EAAG,KAAK;IAAEC,OAAO,EAAC,EAAE;IAACC,WAAW,EAAE;EAAI,CAAC,CAAC;EAErFb,SAAS,CAAC,MAAM;IACZU,UAAU,CAACI,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAEH,SAAS,EAAG;IAAI,CAAC,CAAC,CAAC;IAGjD,CAAC,YAAY;MACT,IAAI;QAChB,IAAII,QAAQ,GAAG,MAAMZ,IAAI;QAEzB,IAAGY,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACpBN,UAAU,CAACI,IAAI,KAAK;YAChB,GAAGA,IAAI;YAAEH,SAAS,EAAC;UAAK,CAAC,CAAC,CAAC;UAC3BD,UAAU,CAACI,IAAI,KAAK;YAChB,GAAGA,IAAI;YAAEF,OAAO,EAACG;UAAQ,CAAC,CAAC,CAAC;UAE5BP,QAAQ,CAACH,MAAM,CAACY,eAAe,CAACF,QAAQ,CAAC,CAAC;QAClD,CAAC,MAAK;UACF,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;QAC5C;MACQ,CAAC,QAAOC,KAAK,EAAC;QACVT,UAAU,CAACI,IAAI,KAAK;UAChB,GAAGA,IAAI;UAAEH,SAAS,EAAC;QAAK,CAAC,CAAC,CAAC;QAC3BD,UAAU,CAACI,IAAI,KAAK;UAChB,GAAGA,IAAI;UAAED,WAAW,EAACM;QAAK,CAAC,CAAC,CAAC;MACrC;IAEA,CAAC,EAAE,CAAC;EACR,CAAC,EAAC,CAACX,QAAQ,CAAC,CAAC;EACb,OAAO,CAACC,OAAO,EAAEC,UAAU,CAAC;AAChC,CAAC;AAAAH,EAAA,CAhCID,eAAe;EAAA,QACPJ,WAAW;AAAA;AAkCxB,OAAO,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM,MAAOZ,QAAQ,IAAK;EACtD,IAAI;IACAA,QAAQ,CAACH,MAAM,CAACgB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAEtB;AACJ,CAAC;AACD,OAAO,MAAMK,gBAAgB,GAAGA,CAAA,KAAM,MAAOhB,QAAQ,IAAK;EACtD,IAAI;IACAA,QAAQ,CAACH,MAAM,CAACoB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC,OAAON,KAAK,EAAE;IACZG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAEtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}